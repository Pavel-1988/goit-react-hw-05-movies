{"version":3,"file":"static/js/621.43c88d58.chunk.js","mappings":"0OAEaA,EAAcC,EAAAA,GAAAA,GAAH,0FAMXC,EAAcD,EAAAA,GAAAA,GAAH,sNAeXE,EAAcF,EAAAA,GAAAA,KAAH,mE,kBCjBT,SAASG,IAEtB,IAAOC,GAAYC,EAAAA,EAAAA,MAAZD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WAEFL,GAINM,MAAM,sCAAD,OACmCN,EADnC,qEAGJO,MAAK,SAAAC,GACF,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBACjC,IAEFN,MAAK,SAAAO,GACDV,EAAWU,EAAOC,QACpB,GAEJ,GAAE,CAACf,KAGF,SAAC,KAAD,UACGG,EAAQa,OAAS,GAEd,SAACrB,EAAD,UACGQ,EAAQc,KAAI,YAAuC,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,OAAOC,EAAyB,EAAzBA,QAAQC,EAAiB,EAAjBA,WAC1BC,EAAa,IAAIC,KAAKF,GAAYG,iBACxC,OACE,UAAC3B,EAAD,YACE,sCAAY,SAACC,EAAD,UAAcqB,QAC1B,uBAAIC,KACJ,4CAAkB,SAACtB,EAAD,UAAcwB,SAHfJ,EAMtB,OAIN,6CAMN,C","sources":["components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n`;\n\nexport const ReviewsItem = styled.li`\n  gap: 10px;\n  margin-top: 15px;\n\n  & > p {\n    font-size: 1em;\n    color: #363434;\n    margin: 10px 0 0px 20px;\n    text-align: justify;\n  }\n  & > h5 {\n    text-align: end;\n  }\n`;\n\nexport const ReviewsSpan = styled.span`\n  color: orangered;\n  font-weight: bold;\n`;","import {  useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react'\nimport { ReviewsList, ReviewsItem, ReviewsSpan } from './Reviews.styled'\n\nimport { Container } from '../Layout/Layout.styled'\n\nexport default function Reviews () {\n\n  const {movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n\n     if (!movieId) {\n      return;\n    }\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=bfc78256055c27ed6be30c1c43cfe9c3&language=en-US`\n    )\n    .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Nothing found'));\n      })\n       \n    .then(review =>{\n         setReviews(review.results)\n      })\n\n  }, [movieId])\n\n  return (\n    <Container>\n      {reviews.length > 0\n        ? (\n          <ReviewsList>\n            {reviews.map(({id, author,content,updated_at }) => {\n              const updateTime = new Date(updated_at).toLocaleString();\n              return (\n                <ReviewsItem  key={id}>\n                  <h4>Author: <ReviewsSpan>{author}</ReviewsSpan></h4>\n                  <p>{content}</p>\n                  <h5>Last updated: <ReviewsSpan>{updateTime}</ReviewsSpan></h5>\n                </ReviewsItem>\n              )\n            })}\n          </ReviewsList>\n        \n      )\n    : (<h4>No reviews yet.</h4>)}\n\n    </Container>\n\n  )\n\n}"],"names":["ReviewsList","styled","ReviewsItem","ReviewsSpan","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetch","then","response","ok","json","Promise","reject","Error","review","results","length","map","id","author","content","updated_at","updateTime","Date","toLocaleString"],"sourceRoot":""}