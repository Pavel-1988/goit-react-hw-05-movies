{"version":3,"file":"static/js/899.df023b5a.chunk.js","mappings":"qPAEaA,EAAWC,EAAAA,GAAAA,IAAH,2FAORC,EAAWD,EAAAA,GAAAA,IAAH,oOAaRE,EAAYF,EAAAA,GAAAA,IAAH,iGASTG,EAAgBH,EAAAA,GAAAA,IAAH,kI,SCzBX,SAASI,IAAe,IAAD,IAE7BC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IA0BzC,OAtBAC,EAAAA,EAAAA,YAAU,WAEFT,GAINU,MAAM,sCAAD,OACmCV,EADnC,6DAGJW,MAAK,SAAAC,GACF,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBACjC,IAEFN,MAAK,SAAAR,GACDC,EAAS,CAACD,GACZ,GAEJ,GAAE,CAACH,KAGJ,gCAEKG,IACC,SAAC,KAAD,UACGA,EAAMe,KAAI,YAAqF,IAAlFC,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,YAAaC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GAE9EC,EAAc,IAAIC,KAAKT,GAAcU,cACrCC,EAAQL,EAAOP,KAAI,YACnB,OADiC,EAAXI,IAEvB,IACAS,KAAK,KAAKC,cACf,OACE,4BACE,SAAC,KAAD,CAAaC,GAAI5B,EAAjB,mBACA,UAACX,EAAD,YACG,SAACE,EAAD,CACCsC,IAAKd,EAAW,uDACoCA,GAChD,iFAEJe,IAAG,OAAEd,QAAF,IAAEA,EAAAA,EAASC,KAEhB,UAACzB,EAAD,YACE,qCAAMyB,QAAN,IAAMA,EAAAA,EAAQD,EAAd,KAAuBM,EAAvB,QACA,wCAAgB,IAAhB,IAAsBH,MACtB,sCACA,uBAAID,KACJ,oCACA,uBAAIO,WAGR,UAAChC,EAAD,YACE,oDACC,2BACG,yBACE,SAAC,KAAD,CAAYS,MAAO,CAAEC,KAAMH,GAAY4B,GAAG,OAA1C,qBAIF,yBACE,SAAC,KAAD,CAAY1B,MAAO,CAAEC,KAAMH,GAAY4B,GAAG,UAA1C,+BA5BAP,EAoCX,OAIP,SAAC,EAAAU,SAAD,WACE,SAAC,KAAD,QAIP,C","sources":["components/movieDetails/MovieDetails.styled.js","components/movieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  \n`\n\nexport const MovieImg = styled.img`\n  /* max-height: 100%;\n  max-width: 100%; */\n  height: 500px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 4px 2px orangered;\n\n  margin-right: 30px;\n\n  :hover {\n    transform: scale(1.05);\n  }\n`\nexport const MovieInfo = styled.div`\n& > p {\n  margin-bottom:20px;\n}\n& > h2,h3 {\n  margin-bottom:5px;\n}\n`\n\nexport const AdditionalDiv = styled.div`\nmargin-top:20px;\n\n  & > ul  {\n    display: flex;\n  }\n  \n\n  & > ul li {\n    margin:20px;\n  }\n  \n`","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense  } from 'react'\n\nimport { Container, StyledLink  } from '../Layout/Layout.styled'\nimport{MovieBox, MovieImg, MovieInfo, AdditionalDiv } from './MovieDetails.styled'\n\nexport default function MovieDetails(){\n\n  const {movieId} = useParams();\n  const [movie, setMovie] = useState([]);\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n\n\n  useEffect(() => {\n\n     if (!movieId) {\n      return;\n    }\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=bfc78256055c27ed6be30c1c43cfe9c3&language=en-US`\n    )\n    .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Nothing found'));\n      })\n       \n    .then(movie =>{\n         setMovie([movie])\n      })\n\n  }, [movieId])\n  \n  return (\n  <>\n  \n      {movie && (\n        <Container>\n          {movie.map(({ release_date, poster_path, title, name, overview, vote_average, genres, id }) => {\n           \n            const releaseYear = new Date(release_date).getFullYear();\n            const genre = genres.map(({ name }) => {\n                  return name;\n                })\n                .join(' ').toLowerCase();\n            return (\n              <div key={id}>\n                <StyledLink  to={backLink}>Back</StyledLink>\n                <MovieBox >\n                   <MovieImg\n                    src={poster_path\n                      ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n                      : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-1-3.jpg'\n                    }\n                    alt={title ?? name}>\n                  </MovieImg>\n                  <MovieInfo>\n                    <h2> {name ?? title} ({releaseYear})</h2>\n                    <p> User score:{' '} {vote_average}</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Geners</h3>\n                    <p>{genre}</p>\n                  </MovieInfo>\n                </MovieBox>\n                <AdditionalDiv>\n                  <h3>Additional information</h3>\n                   <ul>\n                      <li>\n                        <StyledLink state={{ from: backLink }} to=\"cast\">\n                          Cast\n                        </StyledLink>\n                      </li>\n                      <li>\n                        <StyledLink state={{ from: backLink }} to=\"reviews\">\n                          Reviews\n                        </StyledLink>\n                      </li>\n                    </ul>\n                  </AdditionalDiv>\n              </div>\n              )\n            }\n          )}\n        </Container>\n      )}\n      <Suspense>\n        <Outlet />\n      </Suspense>\n  </>\n  )\n}"],"names":["MovieBox","styled","MovieImg","MovieInfo","AdditionalDiv","MovieDetails","movieId","useParams","useState","movie","setMovie","backLink","useLocation","state","from","useEffect","fetch","then","response","ok","json","Promise","reject","Error","map","release_date","poster_path","title","name","overview","vote_average","genres","id","releaseYear","Date","getFullYear","genre","join","toLowerCase","to","src","alt","Suspense"],"sourceRoot":""}